/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guia5.Vistas;

import guia5.AccesoADatos.AlumnoData;
import guia5.AccesoADatos.InscripcionData;
import guia5.Entidades.Alumno;
import guia5.Entidades.Inscripcion;
import guia5.Entidades.Materia;
import java.beans.PropertyVetoException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dev0
 */
public class cargaDeNotas extends javax.swing.JInternalFrame {
private DefaultTableModel modelo = new DefaultTableModel();
//public boolean isCellEditable(int f,int c);
//return false;
//}
   

    /**
     * Creates new form cargaDeNotas
     */
    public cargaDeNotas() {
        initComponents();
        armarCabecera();
        cargarCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCBAlumno = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTmodelo = new javax.swing.JTable();
        jBGuardar = new javax.swing.JButton();
        jBSalir = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel1.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        jLabel1.setText("Seleccione un alumno: ");

        jLabel2.setFont(new java.awt.Font("Noto Sans", 1, 16)); // NOI18N
        jLabel2.setText("Carga De Notas");

        jCBAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBAlumnoActionPerformed(evt);
            }
        });

        jTmodelo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTmodelo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTmodeloMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTmodelo);

        jBGuardar.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        jBGuardar.setText("Guardar");
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });

        jBSalir.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        jBSalir.setText("Salir");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCBAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118))
            .addGroup(layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(jBGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(169, 169, 169))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel2)
                .addGap(95, 95, 95)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(114, 263, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBSalir)
                            .addComponent(jBGuardar))
                        .addGap(125, 125, 125))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCBAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBAlumnoActionPerformed
      borrarFilas();
      InscripcionData inscdata = new InscripcionData();
      ArrayList<Inscripcion> lista = new ArrayList<>();
      Alumno alumno = (Alumno) jCBAlumno.getSelectedItem();
      lista.addAll(inscdata.obtenerInscripcionesPorAlumno(alumno.getIdAlumno()));      
      lista.forEach((i)->{
      modelo.addRow(new Object[]{i.getIdInscripcion(),i.getMateria().getNombre(),i.getNota()});
      
      });
    }//GEN-LAST:event_jCBAlumnoActionPerformed

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
       JOptionPane.showMessageDialog(null,"desea volver al menu principal?");
        try {
            setClosed(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(cargaDeNotas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBSalirActionPerformed

    private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed
       Materia materia = new Materia();
       InscripcionData inscdata = new InscripcionData();
       Alumno alumno =  (Alumno) jCBAlumno.getSelectedItem();
       Inscripcion insc = new Inscripcion();
       
       ArrayList<Inscripcion> lista = new ArrayList<>();
       lista.addAll(inscdata.obtenerInscripcionesPorAlumno(alumno.getIdAlumno()));
       materia=lista.get(jTmodelo.getSelectedRow()).getMateria();
//       lista.forEach((elem)->{
//       //modelo.addRow(new Object[]{elem.getIdInscripcion(),elem.getMateria().getIdMateria(),elem.getNota()));
//       }
       
       int fila =jTmodelo.getSelectedRow();
       
       
       int codigo = alumno.getIdAlumno();
       int idmateria = materia.getIdMateria();
       try{
       String n = String.valueOf( modelo.getValueAt(fila,2));
       double  nota = Double.parseDouble(n); 
       inscdata.actualizarNota(codigo,idmateria, nota);
       }catch(NumberFormatException nf){
       JOptionPane.showMessageDialog(null, "Debe ingresar un numero");
       
       
       
       }
    }//GEN-LAST:event_jBGuardarActionPerformed

    private void jTmodeloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTmodeloMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTmodeloMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBGuardar;
    private javax.swing.JButton jBSalir;
    private javax.swing.JComboBox<Alumno> jCBAlumno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTmodelo;
    // End of variables declaration//GEN-END:variables

private void armarCabecera(){
modelo.addColumn("Codigo");
modelo.addColumn("Nombre");
modelo.addColumn("Nota");
jTmodelo.setModel(modelo);
}

private void cargarCombo(){
AlumnoData aludata = new AlumnoData();
ArrayList<Alumno> lista = new ArrayList<>();
lista.addAll(aludata.listarAlumno());

lista.forEach((i)->{
    jCBAlumno.addItem(i);
});
}

private void borrarFilas(){
        int f=jTmodelo.getRowCount()-1;
        for(;f>=0;f--){
            modelo.removeRow(f);
        }
}


}
